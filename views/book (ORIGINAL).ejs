<html>
  <head>
    <title>Asante AI - Place Booking</title>
    <link href="/public/carousel-caption.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/public/style.css" />
    <link rel="stylesheet" type="text/css" href="/public/button.css" />
    <link href="/public/bootstrap.css" rel="stylesheet">
    <link rel="icon" type="image/png" href="/public/icon.png" sizes="32x32">
  </head>
  <body>
      <table width='100%' border='0' cellpadding="5px">
      <tr> 
      <td align='left' valign="top" width='30%'> &nbsp;&nbsp; <a style="text-decoration: none;" href="/"><img width="160px" height="55px" src="/public/brand.png" alt="Brand"> </a></td>    
      <td border="1px" bordercolor="#bcbcbc" align='center' valign="center" width='40%'> 
        <form action="/search" method="GET">
          <table width="100%" border="0"><tr><td align='center'><input type="text" style="height: 40px; width:100%; background-color:rgb(237, 233, 233);" name="search" id="search" placeholder="Search & Find Holiday Destinations in Africa ......" class="form-control input-m" /> </td><td> &nbsp;&nbsp; <button type="submit" style="height: 35px; width: 45px; border-radius: 4px;"> ðŸ”Ž </button> </td></tr></table>
        </form>
      </td>
      <td align='right' valign="center" width='30%'> <a href="" id="about" style="text-decoration: none;"><font size="3" color="#a24028"><strong> LOGIN </strong></font></a> &nbsp; | &nbsp; <a href="" id="about" style="text-decoration: none;"><font size="3" color="#a24028"><strong> SIGN UP </strong></font></a> &nbsp; <a href="/about" id="about" style="text-decoration: none;"> <img width="24px" height="23px" src="/public/about.png" alt="Logo"> </a> &nbsp;&nbsp;&nbsp;</td>
      </tr>
      </table>
      <strong><hr style="background-color: rgb(213, 210, 210);"></strong>
      <table width='100%' height='100%' border='0' cellpadding="5px">
      <tr> 
      <td width='35%'> </td>    
      <td border="1px" bordercolor="#bcbcbc" align='center' valign="top" width='30%' height='100%'>

        
      <table width='100%' border='0' cellpadding="5px">
      <tr> 
      <td align='left' valign="top">  
        <center><font size="5" color="#616161"><strong> Place Booking </strong></font></center>
        <br><br><br>
      </td> 
      </tr>
      <tr> 
      <td align='left' valign="top"> 


      <table width='100%' border='0' cellpadding="5px">
      <tr> 
      <td align='left' valign="top"> 

        <font size="3" color="#616161"><strong>Place:</strong></font> <font size="3" color="#616161"><%= destinationName %></font>

        <br><br>

        <font size="3" color="#616161"><strong>Price:</strong></font> <font size="3" color="#616161"><%= destinationPrice %></font>

        <br><br>
        <font size="3" color="#616161"><strong> Number of People: &nbsp; </strong></font>
        <select class="form-control-selector" style="border: 1px solid #03989E; font-size: 15px; width: 120px; height: 25px;" name="people" id="people" onchange="updatePrice()">
          <option class="select-option" value="1">1</option>
          <option class="select-option" value="2">2</option>
          <option class="select-option" value="3">3</option>
          <option class="select-option" value="4">4</option>
          <option class="select-option" value="5">5</option>
          <option class="select-option" value="6">6</option>
          <option class="select-option" value="7">7</option>
          <option class="select-option" value="8">8</option>
          <option class="select-option" value="9">9</option>
          <option class="select-option" value="10">10</option>
        </select>

        <br><br>

        <font size="3" color="#616161"><strong> Length of Vacation (Days): &nbsp; </strong></font>
        <select class="form-control-selector" style="border: 1px solid #03989E; font-size: 15px; width: 120px; height: 25px;" name="days" id="days" onchange="updatePrice()">
          <option class="select-option" value="1">1</option>
          <option class="select-option" value="2">2</option>
          <option class="select-option" value="3">3</option>
          <option class="select-option" value="4">4</option>
          <option class="select-option" value="5">5</option>
          <option class="select-option" value="6">6</option>
          <option class="select-option" value="7">7</option>
          <option class="select-option" value="8">8</option>
          <option class="select-option" value="9">9</option>
          <option class="select-option" value="10">10</option>
        </select>

        <br><br><br>

        <input type="hidden" name="fee" value="<%= destinationFee %>" id="fee" required>

        <center>

        <form id="payment-form">
          <div id="card-container"></div>
          <button id="card-button" class="btn-solid-reg" style="font-size: large;" type="button">Pay $<%= destinationFee %></button>
        </form>
        <div id="payment-status-container"></div>

        </center>

        <br><br>

      </td> 
      </tr> 
      </table>

      

      </td> 
      </tr> 
      </table>

      
      </br></br>

      <strong><hr style="background-color: rgb(213, 210, 210);"></strong>

      <p class="copyright">&copy; <script>document.write(new Date().getFullYear());</script>, Asante AI


      </td>
      <td width='35%'> </td>
      </tr>
      </table>
    </br>

    <script>
        function updatePrice(){
        $(document).ready(function(){ 

        var days = $(this).find(`#days`).val();  
        var people = $(this).find(`#people`).val();  
        var fee = $(this).find(`#fee`).val();  

        var total = days*people*fee;
    
        $('#card-button').text(`Pay $${total.toLocaleString("en-US")}`); 

        }); 
        }
    </script>    

    <script>

      function uploadFile(target){
          document.getElementById('fileName').innerHTML = target.files[0].name;

          let formData = new FormData(); 

          let medianame = $('#mediaName').val();  
          let text = $('#textarea').val();  

          formData.append("file", getFile.files[0]);

          formData.append("medianame", medianame);
          formData.append("text", text);

          let uploadName = target.files[0].name;

          if(medianame != '' && uploadName != '') {  

          $('#uploadProgress').text(" Uploading .... ðŸš€");  

          document.getElementById('button').disabled = true;
          $('#button').text(" UPLOADING ...");  

          $.ajax({  
              url:"/autoupload",  
              method:"POST",  
              data:formData,  
              contentType: false,
              processData: false,
              success:function(data)  
              {  
              if(data.upload==1){
                  $('#uploadProgress').text(" Complete! âœ”");
                  
                  document.getElementById('button').disabled = false;
                  $('#button').text("PUBLISH");  
              } else {
                  $('#uploadProgress').text(" Failed! âœ–");
                  
                  document.getElementById('button').disabled = true;
                  $('#button').text("UPLOAD");  
              }
              }  
          });                                          

          }
      }
      
    </script>
    
<script>
  const appId = 'sandbox-sq0idb-HU_dN22jq5rcV-iyFQbUZg';
  const locationId = 'LCKDJ9BFD76ZT';
  
  async function initializeCard(payments) {
     const card = await payments.card();
     await card.attach('#card-container'); 
     return card; 
   }
  
  // Call this function to send a payment token, buyer name, and other details
   // to the project server code so that a payment can be created with 
   // Payments API
   async function createPayment(token) {
     const body = JSON.stringify({
       locationId,
       sourceId: token,
     });
     const paymentResponse = await fetch('/payment', {
       method: 'POST',
       headers: {
         'Content-Type': 'application/json',
       },
       body,
     });
     if (paymentResponse.ok) {
       return paymentResponse.json();
     }
     const errorBody = await paymentResponse.text();
     throw new Error(errorBody);
   }
  
   // This function tokenizes a payment method. 
   // The â€˜errorâ€™ thrown from this async function denotes a failed tokenization,
   // which is due to buyer error (such as an expired card). It is up to the
   // developer to handle the error and provide the buyer the chance to fix
   // their mistakes.
   async function tokenize(paymentMethod) {
     const tokenResult = await paymentMethod.tokenize();
     if (tokenResult.status === 'OK') {
       return tokenResult.token;
     } else {
       let errorMessage = `Tokenization failed-status: ${tokenResult.status}`;
       if (tokenResult.errors) {
         errorMessage += ` and errors: ${JSON.stringify(
           tokenResult.errors
         )}`;
       }
       throw new Error(errorMessage);
     }
   }
  
   // Helper method for displaying the Payment Status on the screen.
   // status is either SUCCESS or FAILURE;
   function displayPaymentResults(status) {
     const statusContainer = document.getElementById(
       'payment-status-container'
     );
     if (status === 'SUCCESS') {
       statusContainer.classList.remove('is-failure');
       statusContainer.classList.add('is-success');
     } else {
       statusContainer.classList.remove('is-success');
       statusContainer.classList.add('is-failure');
     }
  
     statusContainer.style.visibility = 'visible';
   }    
  
  document.addEventListener('DOMContentLoaded', async function () {
    if (!window.Square) {
      throw new Error('Square.js failed to load properly');
    }
    const payments = window.Square.payments(appId, locationId);
    let card;
    try {
      card = await initializeCard(payments);
    } catch (e) {
      console.error('Initializing Card failed', e);
      return;
    }
  
  async function handlePaymentMethodSubmission(event, paymentMethod) {
     event.preventDefault();
  
     try {
       // disable the submit button as we await tokenization and make a
       // payment request.
       cardButton.disabled = true;
       const token = await tokenize(paymentMethod);
       const paymentResults = await createPayment(token);
       displayPaymentResults('SUCCESS');
  
       console.debug('Payment Success', paymentResults);
     } catch (e) {
       cardButton.disabled = false;
       displayPaymentResults('FAILURE');
       console.error(e.message);
     }
   }
  
   const cardButton = document.getElementById(
     'card-button'
   );
   cardButton.addEventListener('click', async function (event) {
     await handlePaymentMethodSubmission(event, card);
   });
  
  });
  </script>
  <script type="text/javascript" src="https://sandbox.web.squarecdn.com/v1/square.js"></script>
  <script src="/public/jquery.js"></script>
  <script src="/public/bootstrap.min.js"></script> <!-- Bootstrap framework -->
  </body>
</html>

